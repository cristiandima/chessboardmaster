{"version":3,"sources":["App.js","index.js"],"names":["SIDE","Object","freeze","WHITE","BLACK","SQUARE","OK","WRONG","GameScreens","MENU","BOARD","END","getRandomInt","min","max","Math","ceil","floor","random","randomPiecesColor","randomCoordinates","Coordinates","Clock","props","componentDidMount","interval","setInterval","setState","prevState","seconds","state","onDone","clearInterval","componentWillUnmount","render","minutes","id","React","Component","x","y","toChessBoardSquare","perspective","letters","this","MainMenuScreen","highScore","changeScreen","style","textAlign","fontSize","width","onClick","text","GameScreen","correct","incScore","color","target","square","display","justifyContent","alignItems","marginLeft","score","onCorrect","GameBoard","ctx","canvasRef","getContext","console","log","i","fillStyle","j","fillRect","e","rect","getBoundingClientRect","clientX","left","clientY","top","setTimeout","ref","el","height","cursor","GameOverScreen","isNewHighScore","flexDirection","marginTop","StartButton","href","className","ExitButton","App","screen","newScore","localStorage","setItem","toString","parseInt","getItem","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b26194ce.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst SIDE = Object.freeze({\n  WHITE: \"WHITE\",\n  BLACK: \"BLACK\",\n});\n\nconst SQUARE = Object.freeze({\n  WHITE: \"#dcdcdc\",\n  BLACK: \"#09292c\",\n  OK: \"#00c946\",\n  WRONG: \"red\",\n});\n\nconst GameScreens = Object.freeze({\n  MENU: \"MENU\",\n  BOARD: \"BOARD\",\n  END: \"END\",\n});\n\nconst GAME_SECONDS = 60;\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst randomPiecesColor = () => {\n  return Math.random() < 0.5 ? SIDE.WHITE : SIDE.BLACK;\n};\n\nconst randomCoordinates = () => {\n  return new Coordinates(getRandomInt(0, 7), getRandomInt(0, 7));\n};\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      seconds: props.seconds,\n    };\n  }\n\n  componentDidMount = () => {\n    this.interval = setInterval(() => {\n      this.setState((prevState) => {\n        return {\n          seconds: prevState.seconds - 1,\n        };\n      });\n      if (this.state.seconds <= 0) {\n        this.props.onDone();\n        clearInterval(this.interval);\n      }\n    }, 1000);\n  };\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval);\n  };\n\n  render = () => {\n    const { seconds } = this.state;\n    let minutes = Math.floor(seconds / 60);\n    return (\n      <div id={\"clock\"}>\n        {minutes}:{seconds % 60}\n      </div>\n    );\n  };\n}\n\nclass Coordinates {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  toChessBoardSquare = (perspective) => {\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n    switch (perspective) {\n      case SIDE.WHITE:\n        return letters[this.x] + `${8 - this.y}`;\n      case SIDE.BLACK:\n        return letters[7 - this.x] + `${this.y + 1}`;\n      default:\n        return \"\";\n    }\n  };\n}\n\nconst MainMenuScreen = ({ highScore, changeScreen }) => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <div id=\"gameTitle\">CHESS BOARD MASTER</div>\n      <StartButton\n        style={{ fontSize: \"40px\", width: \"200px\" }}\n        onClick={() => changeScreen(GameScreens.BOARD)}\n        text={\"START\"}\n      />\n      <div id=\"highScore\">{highScore}</div>\n    </div>\n  );\n};\n\nclass GameScreen extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      color: randomPiecesColor(),\n      target: randomCoordinates(),\n    };\n  }\n\n  correct = () => {\n    this.props.incScore();\n    this.setState({\n      color: randomPiecesColor(),\n      target: randomCoordinates(),\n    });\n  };\n\n  render = () => {\n    const { color, target } = this.state;\n    const square = target.toChessBoardSquare(color);\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"30px\",\n              color: color === SIDE.WHITE ? SQUARE.WHITE : SQUARE.BLACK,\n            }}\n          >\n            {color}\n          </div>\n          <div\n            style={{\n              fontSize: \"50px\",\n              marginLeft: \"-60px\",\n              color: color === SIDE.WHITE ? SQUARE.WHITE : SQUARE.BLACK,\n            }}\n          >\n            {square}\n          </div>\n          <div style={{ fontSize: \"50px\", color: SQUARE.OK }}>\n            {this.props.score}\n          </div>\n        </div>\n        <GameBoard target={target} onCorrect={this.correct} />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <Clock\n            onDone={() => this.props.changeScreen(GameScreens.END)}\n            seconds={GAME_SECONDS}\n          />\n          <ExitButton\n            onClick={() => this.props.changeScreen(GameScreens.END)}\n            text={\"QUIT\"}\n          />\n        </div>\n      </div>\n    );\n  };\n}\n\nclass GameBoard extends React.Component {\n  componentDidMount = () => {\n    const ctx = this.canvasRef.getContext(\"2d\");\n\n    console.log(this.props.target)\n\n    for (let i = 0; i < 8; i++) {\n      let color = i % 2 === 0 ? SQUARE.WHITE : SQUARE.BLACK;\n      ctx.fillStyle = color;\n      for (let j = 0; j < 8; j++) {\n        ctx.fillRect(j * 80, i * 80, 80, 80);\n        color = color === SQUARE.WHITE ? SQUARE.BLACK : SQUARE.WHITE;\n        ctx.fillStyle = color;\n      }\n    }\n  };\n\n  onClick = (e) => {\n    const { target } = this.props;\n    const rect = e.target.getBoundingClientRect();\n    const x = Math.floor((e.clientX - rect.left) / 80);\n    const y = Math.floor((e.clientY - rect.top) / 80);\n\n    let color = SQUARE.BLACK;\n    if (y % 2 === 0 && x % 2 === 0) {\n      color = SQUARE.WHITE;\n    }\n    if (y % 2 !== 0 && x % 2 !== 0) {\n      color = SQUARE.WHITE;\n    }\n\n    const ctx = this.canvasRef.getContext(\"2d\");\n    if (target.x === x && target.y === y) {\n      ctx.fillStyle = SQUARE.OK;\n      ctx.fillRect(x * 80, y * 80, 80, 80);\n      setTimeout(() => {\n        this.props.onCorrect();\n        ctx.fillStyle = color;\n        ctx.fillRect(x * 80, y * 80, 80, 80);\n      }, 200);\n    } else {\n      ctx.fillStyle = SQUARE.WRONG;\n      ctx.fillRect(x * 80, y * 80, 80, 80);\n      setTimeout(() => {\n        ctx.fillStyle = color;\n        ctx.fillRect(x * 80, y * 80, 80, 80);\n      }, 200);\n    }\n  };\n\n  render = () => {\n    return (\n      <div>\n        <canvas\n          id={\"board-canvas\"}\n          ref={(el) => (this.canvasRef = el)}\n          onClick={this.onClick}\n          width={640}\n          height={640}\n          style={{ cursor: \"pointer\" }}\n        />\n      </div>\n    );\n  };\n}\n\nconst GameOverScreen = ({ score, isNewHighScore, changeScreen }) => {\n  return (\n    <div style={{ \"text-align\": \"center\" }}>\n      <div id=\"gameTitle\">CHESS BOARD MASTER</div>\n      <div>\n        {isNewHighScore && (\n          <div style={{ fontSize: \"25px\" }}>New High Score!</div>\n        )}\n        <div id={\"highScore\"} style={{ color: SQUARE.OK }}>\n          {score}\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <StartButton\n          style={{ width: \"200px\" }}\n          onClick={() => changeScreen(GameScreens.BOARD)}\n          text=\"RETRY\"\n        />\n        <ExitButton\n          style={{ fontSize: \"25px\", marginTop: \"20px\" }}\n          onClick={() => changeScreen(GameScreens.MENU)}\n          text={\"EXIT\"}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst StartButton = ({ onClick, text, style = {} }) => {\n  return (\n    <a href=\"#\" className=\"button startButton\" onClick={onClick} style={style}>\n      {text}\n    </a>\n  );\n};\n\nconst ExitButton = ({ onClick, text, style = {} }) => {\n  return (\n    <a href=\"#\" className=\"button exitButton\" onClick={onClick} style={style}>\n      {text}\n    </a>\n  );\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      score: 0,\n      highScore: parseInt(localStorage.getItem(\"highScore\") || 0),\n      isNewHighScore: false,\n      screen: GameScreens.MENU,\n    };\n  }\n\n  changeScreen = (screen) => {\n    this.setState((prevState) => {\n      return {\n        screen: screen,\n        isNewHighScore:\n          screen !== GameScreens.END ? false : prevState.isNewHighScore,\n        score: screen === GameScreens.BOARD ? 0 : prevState.score,\n      };\n    });\n  };\n\n  incScore = () => {\n    this.setState((prevState) => {\n      const newScore = prevState.score + 1;\n      const isNewHighScore = newScore > prevState.highScore;\n      if (isNewHighScore) {\n        localStorage.setItem(\"highScore\", newScore.toString());\n      }\n      return {\n        score: newScore,\n        highScore: isNewHighScore ? newScore : prevState.highScore,\n        isNewHighScore: isNewHighScore,\n      };\n    });\n  };\n\n  render = () => {\n    switch (this.state.screen) {\n      case GameScreens.BOARD:\n        return (\n          <div id={\"gameScreenContainer\"}>\n            <GameScreen\n              score={this.state.score}\n              incScore={this.incScore}\n              changeScreen={this.changeScreen}\n            />\n          </div>\n        );\n      case GameScreens.END:\n        return (\n          <div id={\"app\"}>\n            <GameOverScreen\n              score={this.state.score}\n              isNewHighScore={this.state.isNewHighScore}\n              highScore={this.state.highScore}\n              changeScreen={this.changeScreen}\n            />\n          </div>\n        );\n      default:\n        return (\n          <div id={\"app\"}>\n            <MainMenuScreen\n              highScore={this.state.highScore}\n              changeScreen={this.changeScreen}\n            />\n          </div>\n        );\n    }\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}